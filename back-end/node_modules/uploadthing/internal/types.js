/**
 * Marker used to append a `customId` to the incoming file data in `.middleware()`
 * @example
 * ```ts
 * .middleware((opts) => {
 *   return {
 *     [UTFiles]: opts.files.map((file) => ({
 *       ...file,
 *       customId: generateId(),
 *     }))
 *   };
 * })
 * ```
 */ const UTFiles = Symbol("uploadthing-custom-id-symbol");
/**
 * Valid options for the `?actionType` query param
 */ const VALID_ACTION_TYPES = [
    "upload",
    "failure",
    "multipart-complete"
];
const isActionType = (input)=>typeof input === "string" && VALID_ACTION_TYPES.includes(input);
/**
 * Valid options for the `uploadthing-hook` header
 * for requests coming from UT server
 */ const VALID_UT_HOOKS = [
    "callback"
];
const isUploadThingHook = (input)=>typeof input === "string" && VALID_UT_HOOKS.includes(input);

export { UTFiles, VALID_ACTION_TYPES, VALID_UT_HOOKS, isActionType, isUploadThingHook };
