import * as vue from 'vue';
import { InputHTMLAttributes, ReservedProps, HTMLAttributes } from 'vue';

type AcceptProp = Record<string, string[]>;
type DropzoneOptions = {
    multiple?: boolean;
    accept?: AcceptProp | undefined;
    minSize?: number;
    maxSize?: number;
    maxFiles?: number;
    disabled?: boolean | undefined;
    onDrop: <T extends File>(acceptedFiles: T[]) => void;
};
type DropzoneState = {
    isFocused: boolean;
    isDragActive: boolean;
    isDragAccept: boolean;
    isDragReject: boolean;
    isFileDialogActive: boolean;
    acceptedFiles: File[];
};

type DropEvent = InputEvent | DragEvent | Event;
declare function useDropzone(options: DropzoneOptions): {
    getInputProps: () => InputHTMLAttributes & ReservedProps;
    getRootProps: () => HTMLAttributes & ReservedProps;
    rootRef: vue.Ref<HTMLElement | undefined>;
    inputRef: vue.Ref<HTMLInputElement | undefined>;
    isFocused: vue.Ref<boolean>;
    isFileDialogActive: vue.Ref<boolean>;
    isDragActive: vue.Ref<boolean>;
    isDragAccept: vue.Ref<boolean>;
    isDragReject: vue.Ref<boolean>;
    acceptedFiles: vue.Ref<File[]>;
};

export { type AcceptProp, type DropEvent, type DropzoneOptions, type DropzoneState, useDropzone };
